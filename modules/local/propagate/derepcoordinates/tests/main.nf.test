nextflow_process {

    name "Test Process: PROPAGATE_DEREPCOORDINATES"
    script "../main.nf"
    process "PROPAGATE_DEREPCOORDINATES"

    setup {
        run("PROPAGATE_EXTRACTPROVIRUSES") {
            script "../../extractproviruses/main.nf"
            process {
                """
                input[0] = Channel.of(
                        [
                            [ id: 'test' ],
                            file(params.pipelines_testdata_base_path + "modules/local/propagate/propagate_test_contigs.fasta.gz", checkIfExists: true)
                        ]
                    )
                    input[1] = Channel.of(
                        [
                            [ id: 'test' ],
                            file(params.pipelines_testdata_base_path + "modules/local/propagate/b_fragilis_genomad_virus_summary.tsv", checkIfExists: true)
                        ]
                    )
                    input[2] = Channel.of(
                        [
                            [ id: 'test' ],
                            file(params.pipelines_testdata_base_path + "modules/local/propagate/b_fragilis_checkv_contamination.tsv", checkIfExists: true)
                        ]
                    )
                """
            }
        }
    }


    test("coords.tsv + clusters.tsv") {

        when {
            process {
                """
                input[0] = PROPAGATE_EXTRACTPROVIRUSES.out.provirus_coords
                input[1] = Channel.of(
                    [
                        [ id: 'test' ],
                        file(params.pipelines_testdata_base_path + "modules/local/propagate/b_fragilis_clusters.tsv", checkIfExists: true)
                    ]
                )
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("coords.tsv + clusters.tsv - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = PROPAGATE_EXTRACTPROVIRUSES.out.provirus_coords
                input[1] = Channel.of(
                    [
                        [ id: 'test' ],
                        file(params.pipelines_testdata_base_path + "modules/local/propagate/b_fragilis_clusters.tsv", checkIfExists: true)
                    ]
                )
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
