nextflow_pipeline {

    name "Test pipeline: NFCORE_PHAGEANNOTATOR"
    script "main.nf"
    tag "pipeline"
    tag "nfcore_phageannotator"
    tag "nfcore_phageannotator_default"

    test("Parameters: default") {
        when {
            params {
                outdir                      = "$outputDir"
                assembly_min_length         = 3000
                mash_screen_min_score       = 1
                mash_screen_winner_take_all = true
                genomad_min_score           = 0.7
                genomad_max_fdr             = 1
                genomad_disable_nn          = true
                genomad_sensitivity         = 0.1
                checkv_minimal_db           = true
                checkv_min_length           = 3000
                iphop_partial_test          = true
                max_cpus                    = 4
                max_memory                  = '15.GB'
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    path("${params.outdir}/AssemblyFilter"),
                    path("${params.outdir}/VirusClassification"),
                    path("${params.outdir}/VirusQuality"),
                    path("${params.outdir}/GenomeClustering"),
                    path("${params.outdir}/VirusAbundance/bowtie2/align/test1.bowtie2.log"),
                    path("${params.outdir}/VirusAbundance/bowtie2/build"),
                    file("${params.outdir}/pipeline_info/nf_core_pipeline_software_mqc_versions.yml").readLines()[0..41]
                    ).match() },
                { assert path("${outputDir}/VirusAbundance/coverm/contig/all_samples_alignment_results.tsv").readLines().size() == 3 },
                { assert new File("$outputDir/ReadQuality/fastqc/test1_1_fastqc.html").exists() },
                { assert new File("$outputDir/ReadQuality/fastqc/test1_2_fastqc.html").exists() },
                { assert new File("$outputDir/VirusAbundance/bowtie2/align/test1.bam").exists() },
                { assert new File("$outputDir/multiqc/multiqc_report.html").exists() }
            )
        }
    }
}
